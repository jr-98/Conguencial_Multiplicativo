/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package conguencial_multiplicativo;

import java.math.BigDecimal;
import java.text.DecimalFormat;
//import javafx.scene.chart.Chart;

/**
 *
 * @author @Jonathan_Tillaguango_J
 */
public class GUITestPoker extends javax.swing.JFrame {

    /**
     * Creates new form GUITestPoker
     */
    public GUITestPoker() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        lblSalida = new javax.swing.JLabel();
        txtDPoker = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaSalidaPoker = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel0 = new javax.swing.JLabel();
        cbPPoker = new javax.swing.JComboBox<>();
        btnCalcularPoker = new javax.swing.JButton();
        txtSemillaPoker = new javax.swing.JTextField();
        txtTPoker = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaData = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        textAreaFE = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel7.setText("m:10 y d:");

        lblSalida.setText("SERIE");

        txtDPoker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDPokerActionPerformed(evt);
            }
        });

        textAreaSalidaPoker.setColumns(20);
        textAreaSalidaPoker.setRows(5);
        textAreaSalidaPoker.setEnabled(false);
        jScrollPane1.setViewportView(textAreaSalidaPoker);

        jLabel1.setText("Semilla (*no debe ser divisible entre 2 y 5 )");

        jLabel2.setText("Constante multiplicativa (a=200tÂ±p)");

        jLabel3.setText("Modulo (patencia 10)");

        jLabel0.setText("Prueba del poker");

        cbPPoker.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3", "7", "11", "13", "17", "19", "23", "29", "31", "37", "41", "43", "47", "53", "59", "61", "67", "71", "73", "79", "83", "89", "97" }));
        cbPPoker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPPokerActionPerformed(evt);
            }
        });

        btnCalcularPoker.setText("Calcular serie Ingresada");
        btnCalcularPoker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularPokerActionPerformed(evt);
            }
        });

        txtSemillaPoker.setToolTipText("");
        txtSemillaPoker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSemillaPokerActionPerformed(evt);
            }
        });

        txtTPoker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTPokerActionPerformed(evt);
            }
        });

        jLabel5.setText("p");

        jLabel4.setText("t:");

        textAreaData.setColumns(20);
        textAreaData.setRows(5);
        jScrollPane2.setViewportView(textAreaData);

        jLabel6.setText("Datos");

        textAreaFE.setColumns(20);
        textAreaFE.setRows(5);
        jScrollPane3.setViewportView(textAreaFE);

        jLabel9.setText("console");

        jButton1.setText("Calcular serie predefinida");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("<---");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(49, 49, 49)
                            .addComponent(jLabel4)
                            .addGap(4, 4, 4)
                            .addComponent(txtTPoker, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(27, 27, 27)
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtDPoker, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnCalcularPoker, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(14, 14, 14)))
                    .addComponent(jButton2))
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSalida)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(87, 87, 87))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(123, 123, 123)
                            .addComponent(jLabel0))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtSemillaPoker, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(2, 2, 2))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cbPPoker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(200, 200, 200)
                            .addComponent(jLabel8)))
                    .addContainerGap(339, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTPoker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(txtDPoker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnCalcularPoker, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(191, 191, 191)
                        .addComponent(jButton2)))
                .addGap(12, 12, 12))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSalida)
                    .addComponent(jLabel6)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel0)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(93, 93, 93)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(txtSemillaPoker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(52, 52, 52)
                            .addComponent(jLabel2)
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cbPPoker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5))
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8)
                            .addGap(514, 514, 514)))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDPokerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDPokerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDPokerActionPerformed

    private void cbPPokerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPPokerActionPerformed

    }//GEN-LAST:event_cbPPokerActionPerformed

    private void btnCalcularPokerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularPokerActionPerformed
        //variables para calcular la serie
        vista vista = new vista();
        Double seeb = Double.parseDouble(txtSemillaPoker.getText().toString());
        Double t = Double.parseDouble(txtTPoker.getText().toString());
        Double p = Double.parseDouble((String) cbPPoker.getSelectedItem().toString());
        int d = Integer.parseInt((String) txtDPoker.getText().toString());
        vista.cMultiplicativo(seeb, t, p, d);//send to data to method called cMultiplicativo
        Double[] conMult = vista.cMultiplicativo(seeb, t, p, d);
        //For convert Double to String
        int n = conMult.length;
        String[] serie = new String[n];
        String printSerie = "";
        String[] serieDecimal = new String[n];
        String printSDecimal = "";
        //For present the Decimals whit 5 digits
        DecimalFormat df = new DecimalFormat("#.00000");
        for (int i = 0; i < n; i++) {
            String convert = String.valueOf(conMult[i]);
            serie[i] = convert;
            printSerie += serie[i] + "\n";
            serieDecimal[i] = String.valueOf(conMult[i] / 100000);
            printSDecimal += df.format(conMult[i] / 100000) + "\n";
        }
        textAreaSalidaPoker.setText(printSerie);
        textAreaData.setText(printSDecimal);
        pokerTest(serieDecimal);
    }//GEN-LAST:event_btnCalcularPokerActionPerformed

    private void txtSemillaPokerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSemillaPokerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSemillaPokerActionPerformed

    private void txtTPokerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTPokerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTPokerActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        String[] serie = returnSerie();
        pokerTest(serie);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        Main.main(null);
    }//GEN-LAST:event_jButton2ActionPerformed
//Methods
    //Method for present

    public void present(Double[] serie) {
        String print = "";
        for (int i = 1; i <= serie.length; i++) {
            if (i == 1) {
                print += "n\t" + "Xn\n" + i + "\t" + serie[i - 1] + "\n";
                textAreaSalidaPoker.setText(print);
            } else {
                print += i + "\t" + serie[i - 1] + "\n";
                textAreaSalidaPoker.setText(print);
            }
        }

    }

    //Method for claculate the poker test
    public void pokerTest(String[] serie) {
        //Types of poker
        final double allDiferent, aPair, twoPair, tercia, full, poker, quintilla;
        allDiferent = 0.30240;
        aPair = 0.50400;
        twoPair = 0.10800;
        tercia = 0.07200;
        poker = 0.00450;
        quintilla = 0.00010;
        String texto1 = "";
        int num = serie.length;
        for (int i = 0; i < serie.length; i++) {
            texto1 += "[" + i + "]" + " " + serie[i] + "\n";
        }
        textAreaData.setText(texto1);

        String texto2 = "";
        String texto3 = "";

        String[] separator = new String[2];

        int[] cases = new int[num];
        int[] position = new int[10];
        for (int i = 0; i < 10; i++) {
            position[i] = 0;
        }
        for (int i = 0; i < serie.length; i++) {
     
            texto2 = String.valueOf(serie[i]);
    

            separator = texto2.split("\\.");
            texto3 = separator[1];

            for (int j = 0; j < texto3.length(); j++) {

                //  System.out.println("tama;o " + texto3.length());
                for (int k = j + 1; k < texto3.length(); k++) {
                    //System.out.println("ssss "+ te);
                    if (texto3.charAt(j) == texto3.charAt(k)) {
                        if (texto3.charAt(k) == '0') {
                            position[0]++;
                        } else if (texto3.charAt(k) == '1') {
                            position[1]++;
                        } else if (texto3.charAt(k) == '2') {
                            position[2]++;
                        } else if (texto3.charAt(k) == '3') {
                            position[3]++;
                        } else if (texto3.charAt(k) == '4') {
                            position[4]++;
                        } else if (texto3.charAt(k) == '5') {
                            position[5]++;
                        } else if (texto3.charAt(k) == '6') {
                            position[6]++;
                        } else if (texto3.charAt(k) == '7') {
                            position[7]++;
                        } else if (texto3.charAt(k) == '8') {
                            position[8]++;
                        } else if (texto3.charAt(k) == '9') {
                            position[9]++;
                        }
                    }
                }
            }

            int s = 0;
            for (int n = 0; n < 9; n++) {
                if (position[n] == 1) {
                    s++;
                } else if (position[n] == 3) {
                    s = 3;
                }
            }
            if (s == 0) {//todos diferentes
                cases[i] = 1;
            } else if (s == 1) { //par
                cases[i] = 2;
            } else if (s == 2) {//par doble
                cases[i] = 3;
            } else if (s == 3) {//tercia
                cases[i] = 4;
            } else if (s == 6) {//full
                cases[i] = 5;
            }
            for (int z = 0; z < 10; z++) {
                position[z] = 0;
            }
        }
        int caso1 = 0;
        int caso2 = 0;
        int caso3 = 0;
        int caso4 = 0;
        int caso5 = 0;
        String printFE = "";
        for (int i = 0; i < cases.length; i++) {
            printFE += "[" + i + "]" + " " + cases[i] + "\n";
            if (cases[i] == 1) {
                caso1++;
            } else if (cases[i] == 2) {
                caso2++;
            } else if (cases[i] == 3) {
                caso3++;
            } else if (cases[i] == 4) {
                caso4++;
            } else {
                caso5++;
            }
        }
        textAreaFE.setText(printFE);//Calculo de estadisticos oara verificacion de la serie
        double est1 = (Math.pow((50.4 - (double) caso1), 2)) / 50.4;
        double est2 = (Math.pow((43.2 - (double) caso2), 2)) / 43.2;
        double est3 = (Math.pow((2.7 - (double) caso3), 2)) / 2.7;
        double est4 = (Math.pow((3.6 - (double) caso4), 2)) / 3.6;
        double est5 = (Math.pow((0.1 - (double) caso5), 2)) / 0.1;
        double totalEst = est1 + est2 + est3 + est4 + est5;
        textAreaSalidaPoker.setText("suma estadistico: " + totalEst);
        if (totalEst < 9.49) {
            System.out.println("Se acepta el estadistico:" + totalEst + ", Es menor a 9.49");
            textAreaSalidaPoker.setText("Se acepta el estadistico:" + totalEst + ", Es menor a 9.49");
        } else {
            System.out.println("Se rechaza el estadistico:" + totalEst + ", Es mayor a 9.49");
            textAreaSalidaPoker.setText("Se rechaza el estadistico:" + totalEst + ", Es mayor a 9.49");
        }

    }
//Method that returns a array 

    public String[] returnSerie() {
        String[] serie = new String[100];
        serie[0] = "0.03991";
        serie[1] = "0.38555";
        serie[2] = "0.17546";
        serie[3] = "0.32643";
        serie[4] = "0.69572";
        serie[5] = "0.24122";
        serie[6] = "0.61196";
        serie[7] = "0.30532";
        serie[8] = "0.03788";
        serie[9] = "0.48228";
        serie[10] = "0.88618";
        serie[11] = "0.71299";
        serie[12] = "0.27954";
        serie[13] = "0.80863";
        serie[14] = "0.33564";
        serie[15] = "0.90899";
        serie[16] = "0.78038";
        serie[17] = "0.55986";
        serie[18] = "0.87539";
        serie[19] = "0.16818";
        serie[20] = "0.10461";
        serie[21] = "0.95554";
        serie[22] = "0.73704";
        serie[23] = "0.52861";
        serie[24] = "0.68777";
        serie[25] = "0.66591";
        serie[26] = "0.30231";
        serie[27] = "0.21704";
        serie[28] = "0.97599";
        serie[29] = "0.63379";
        serie[30] = "0.19161";
        serie[31] = "0.23853";
        serie[32] = "0.58909";
        serie[33] = "0.00514";
        serie[34] = "0.60780";
        serie[35] = "0.75754";
        serie[36] = "0.70267";
        serie[37] = "0.66485";
        serie[38] = "0.08823";
        serie[39] = "0.60311";
        serie[40] = "0.93716";
        serie[41] = "0.32886";
        serie[42] = "0.92052";
        serie[43] = "0.95819";
        serie[44] = "0.39510";
        serie[45] = "0.27699";
        serie[46] = "0.92962";
        serie[47] = "0.10274";
        serie[48] = "0.75867";
        serie[49] = "0.85783";
        serie[50] = "0.41290";
        serie[51] = "0.05870";
        serie[52] = "0.82444";
        serie[53] = "0.20247";
        serie[54] = "0.48460";
        serie[55] = "0.60833";
        serie[56] = "0.43529";
        serie[57] = "0.88722";
        serie[58] = "0.94813";
        serie[59] = "0.74457";
        serie[60] = "0.16894";
        serie[61] = "0.59780";
        serie[62] = "0.46215";
        serie[63] = "0.06831";
        serie[64] = "0.35905";
        serie[65] = "0.06494";
        serie[66] = "0.61773";
        serie[67] = "0.12202";
        serie[68] = "0.20717";
        serie[69] = "0.47619";
        serie[70] = "0.63312";
        serie[71] = "0.01119";
        serie[72] = "0.99005";
        serie[73] = "0.81759";
        serie[74] = "0.85558";
        serie[75] = "0.25983";
        serie[76] = "0.06318";
        serie[77] = "0.56736";
        serie[78] = "0.31900";
        serie[79] = "0.90561";
        serie[80] = "0.98953";
        serie[81] = "0.09958";
        serie[82] = "0.15917";
        serie[83] = "0.19640";
        serie[84] = "0.85244";
        serie[85] = "0.03152";
        serie[86] = "0.22109";
        serie[87] = "0.94205";
        serie[88] = "0.82037";
        serie[89] = "0.87481";
        serie[90] = "0.71857";
        serie[91] = "0.92784";
        serie[92] = "0.04921";
        serie[93] = "0.45197";
        serie[94] = "0.15191";
        serie[95] = "0.01291";
        serie[96] = "0.38384";
        serie[97] = "0.66164";
        serie[98] = "0.54155";
        serie[99] = "0.72848";

        return serie;
    }

//End methods
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUITestPoker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUITestPoker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUITestPoker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUITestPoker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUITestPoker().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalcularPoker;
    private javax.swing.JComboBox<String> cbPPoker;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel0;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblSalida;
    private javax.swing.JTextArea textAreaData;
    private javax.swing.JTextArea textAreaFE;
    private javax.swing.JTextArea textAreaSalidaPoker;
    private javax.swing.JTextField txtDPoker;
    private javax.swing.JTextField txtSemillaPoker;
    private javax.swing.JTextField txtTPoker;
    // End of variables declaration//GEN-END:variables
}
